{"ast":null,"code":"var _jsxFileName = \"/home/rajvardhan/Desktop/Web Development/pizza_app/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/home/rajvardhan/Desktop/Web Development/pizza_app/src/store/CartProvider.js"],"sourcesContent":["import {useReducer} from 'react'; \n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState={\n    items:[],\n    totalAmount:0,\n};\n\n\nconst cartReducer=(state,action)=>{\n    if(action.type==='ADD'){\n       const updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;\n\n       const existingCartItemIndex=state.items.findIndex((item)=>item.id===action.item.id);\n\n       const existingCartItem=state.items[existingCartItemIndex];\n       let updatedItem;\n       let updatedItems;\n\n       if(existingCartItem){\n          const updatedItem={\n               ...existingCartItem,\n               amount:existingCartItem.amount+action.item.amount,\n           };\n           updatedItems=[...state.items];\n           updatedItems[existingCartItemIndex]=updatedItem;\n       }else{\n           updatedItems=state.items.concat(action.item);\n       }\n        \n        return{\n            items:updatedItems,\n            totalAmount:updatedTotalAmount\n        };\n    }\n    if(action.type==='REMOVE'){\n       const existingCartItemIndex=state.items.findIndex((item)=>item.id===action.id);\n    \n    const existingItem=state.items[existingCartItemIndex];\n    const updatedTotalAmount=state.totalAmount-existingItem.price;\n    let updatedItems;\n    if(existingItem.amount===1){\n      updatedItems=state.items.filter(item=>item.id!==action.id);\n    }else{\n        const updatedItem={...existingItem,amount:existingItem.amount-1};\n        updatedItems=[...state.items];\n        updatedItems[existingCartItemIndex]=updatedItem;\n    }\n    return{\n        items:updatedItems,\n        totalAmount:updatedTotalAmount \n    };\n    }\n\n    return defaultCartState;\n};\n\nconst CartProvider=(props)=>{\n\n   const [cartState,dispatchCartAction] =useReducer(cartReducer,defaultCartState);\n\n    const addItemToCartHandler=(item)=>{\n        dispatchCartAction({type:'ADD',item:item});\n    };\n\n    const removeItemFromCartHandler=(id)=>{\n        dispatchCartAction({type:'REMOVE',id:id});\n    };\n\nconst cartContext={\n    items:cartState.items,\n    totalAmount:cartState.totalAmount,\n    addItem:addItemToCartHandler,\n    removeItem:removeItemFromCartHandler,\n}\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n};\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}